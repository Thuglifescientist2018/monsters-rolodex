{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","props","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","user","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAQG,GAAlC,0BACHC,IAAI,YAEN,mCAAMJ,EAAQK,KAAd,OACA,kCAAKL,EAAQM,MAAb,WCNSC,G,MAAW,SAACC,GACvB,OACE,qBAAKP,UAAU,YAAf,SACGO,EAAMC,SAASC,KAAI,SAACV,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,WCLdQ,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCCG,G,wDArCb,aAAgB,IAAD,8BACd,gBAcDH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAdtC,EAAKC,MAAQ,CACXb,SAAW,GACXU,YAAa,IAJF,E,qDAUf,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,oBAKzC,WACE,MAAiCC,KAAKN,MAA/Bb,EAAP,EAAOA,SAAUU,EAAjB,EAAiBA,YACXU,EAAmBpB,EAASqB,QAAO,SAAA9B,GAAO,OAAIA,EAAQK,KAAK0B,cAAcC,SAASb,EAAYY,kBAEpG,OACE,sBAAK9B,UAAU,MAAf,UACA,kDACC,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAce,KAAKf,eAC3D,cAAC,EAAD,CAAWJ,SAAUoB,W,GA3BXI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.68fbec40.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.style.css\";\r\n\r\nexport const Card = ({ monster }) => (\r\n  <div className=\"card-container\">\r\n    <img\r\n      src={`https://robohash.org/${monster.id}>set=set2&size=180x180`}\r\n      alt=\"monster\"\r\n    />\r\n    <h2> {monster.name} </h2>\r\n    <p> {monster.email} </p>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\nimport \"./card-list.styles.css\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n  <input\r\n    className=\"search\"\r\n    type=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n  />\r\n);\r\n","import React,  {Component} from 'react'\nimport {CardList} from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component'\nimport './App.css';\n\nclass App extends Component {\n  constructor()  {\n   super();\n    this.state = {\n      monsters:  [],\n      searchField: ''\n    };\n   \n    \n  }\n  \n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(user => this.setState({monsters: user}) )\n  }\n  handleChange = (e) =>  {\n    this.setState({ searchField: e.target.value })\n  }\n  render()  {\n    const {monsters, searchField}  = this.state\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n   \n    return(\n      <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n       <SearchBox placeholder=\"search monsters\" handleChange={this.handleChange} />\n        <CardList  monsters={filteredMonsters}/>\n     \n    \n    </div>\n\n    )\n \n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}